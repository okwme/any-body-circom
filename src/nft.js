import Q5 from './q5.min.js'
import { Anybody } from './anybody.js'

const q5 = new Q5()
const hash = window.location.hash.slice(1)
console.log({ hash })
if (
  hash ===
  'eJzVWl2IXVcVbprUwkUbbEqaFxFba00gZa_9s_beWKOYWqMSqEkjBNFh2pkkY2YymslEolKx-lCESu7c3Gh8MB1zz24aH-JL6UOiKcE_qMc3hQr6IAULrQ_6ICIKfuvM_TvnTH5mkqEzMzA_956z99prfetb31rnfvvC7JGZ0ePjY3tmjzx7bmz0xO8P_Pf5O9Lk-PHxyZn2d_uvZMUr6y4cODo6NT7z5PT04Xte-srR6ekDj40eG21-79zsxNhrO-Pm7W_v2L23etPFiSMHJicOHjq2e2JmZmJyvD2vXiRVfM2rO-bV-amF12fmmuta-UPr8mlqvPTU9NiJTx-ZODYz106kAgVOzDoYnZHyjjNyTsXMMBZpJ0PRWp28JiKDCyjIZUQq0x4XFIs9PnFkdHKunRljvU2srIsxo0CyIlah3lrYTGubHBs21NFBcScyhXk1fPafTc8eu-6ZXnx64ujTsxPHLhzEPSN6RDtVdeadQwvm6x4YuHOu6877zoZLD-weq9520-481Xy4le_8Wz7ynUbzd_9qzSv5Hji21c6s0spmbIMKmSbr4Qofne65IgTlQ0hBW-MsHGoCPMaW_YJb4Xdrjbb4L0aPW5WF843yJtOm5PZWO0VDxqqkcQczNpNttPfB9jZjH0hxip7J-A4iiRXZRZoXQ6LxLiBoiDAstcG4jtEIcrHPkB-vXj8w8l2OjJHIdP1t7JbPPPL6W8v291zzoVb--L78i5cbw15eyaMPu7jjHHDLxjmrZBeNn9EiVbq7RIv3KAXgmkN5lywa1iYFH4MrNmGYYZQtgR4YXSLszWKwXz-85J0bB7BvdcOgNo3958rn91dvWwLswSJ7TuR7NzeavvfXICCnkOLeiL9JGwmCVgZO0pGi6roKvrXeJO2tAzvoGMA0pHSPToQjYtQhFe9jAYcEykA92i9EpZ28MuAMMJZRRoIBFsEKChdjl-GwncIxsBEZrGBckAvsUMw4mqgpOcXksEVwWniKWPcs8eStVsmSjYQX2WndIU8s0Ik6RlaIqmMSkrMxdAJHPb-EjKnF1A4S5hN_vd-c--PpF5YdqZPDUXkn_DAch4QNsX0ihzQMMMJGloupR4eZBc95pLFGoknlABsabMp9NjQRa2Afrao2ZM5aVhkTKGAFIrHzY7PPbby68-KyIzHXvKeV3_tgPvPrSqa8Ez4pRcUCC17BEEcaFiixQ0v69SwInq1L2N5YlvST6hRZF5EHTDwiL1dipwoqHCzn5LGuoG3xmICglhOVKudtGF5y_d0DzvtBN34fnfzgmcaFw9Xbbjp-p4Xzjmb5ll2N5idb-aPvzcfONprjrfzgKzl_fyim7XbS0DxCaMZ7J-WaYqalNvXJD_WGCm6DNgCroSKQD65f9JFEbGIC3QWPF7XCYuBQsGeX_AhXgB1BjcFBCkBJEWqKIbdAfqhpKIgRW6DqYVlJdFwGdYftXIkdYa0JXkH7OQANXA21xqLawBT9ssYRtbQIp4gQwAX2ksN5uvaiYgYboVUIpmawmnFUA9EjKLCoroSiiBukCAjCpRQ4V8AnAD42eQ8Uy65YQo5At5a3boS068Z9x6M7_nC5vWnZcT9Ziuwq9VUpnii93rmkkXsSexRXwMJF7Xo2OgbHw0YAM7BQvQh0E0AsXRsjMILFtddCRmUTQ0ADACWFxBf5UzbReAsFmyTTVyic9o1Dl35zYvQ2hXN1uqqcnYg5dA5y3EXwshYJRNHYvomBoaQAC7Rb3nWisAQpyz0LMyCRQMIaXZmtWmi0ji5mQZvoqgYSe0Xo0oSKViaW9Mw_f3XptddvV2quQkeV81KEk0_YkaSCgvyN9NixVxaQ_ViDk9bowl2H0S6CuXGQviZGg6JCsgqteI06PDOIJaEr8XWwQZwR3kQzulJ5SS8_e-hL7ue3Ky9XpatK0XRAGyQSTFSuA90bO167fhlwXkWA0Yi0kkYyWoEk6nTPQLEI_B-dMzXegPiS4m2cQLVqn3cazRKEfFyptHz4PVf-x6NXb1MoV6GfSnEUWe2U9D24BDugAHdQwfuDr6CDAR7YsTIAIbQwiyJDiehaaFEAok4gDxdqvMGALkjFRlT2GtRQ5C0ICf8tMStfxVfj2gHcqrafnduzYwkBzGQIZ_OtEz-hQRybrXzqBbxW0bar0l_DIc2CTNsSRbZiISBiOtDDfQthreaAOoBKLzM1hggHgcRiD_nDoBkSg-rEYZ2OCqpBW1W3Tok4x51KE10zmuhNlpOa1XbnruElN2watDtnuhi44y9Tu149vKt62w0w4HW-9clhDLSBgfN4rdH8QCsfOZQ_9u5Gc6SV7_1H_rnhPvY0eJPQanoUQ8YyIOMoYxtmlOKeMnZORj4eqkgXkCAZDJH87HY9Ae8ZZLwnEb-AkQzKtOde1-MQOawAhClSIr6L0RLLTHWh64kG4CQpGwAc7vLS9aCcq4WuB-BEBFXIHCQchB4aXmnPgqCASl3R6YUWi1CCgGKUHZLhh1gzOA-aO3RcUvYjw1D2xTawun8eYEmaNIh5nMSQzFIIlad3HpAaZGdiY0SwEH5baRhi0TsbslKGsLeMEl1kAZORGdfCSaSz0yahuslQTVDrM7Tn3tyIOxLqG_yTZOpgi5m0iFkwqa0wCg8xyvq3s8t_f9-_b4imxRYHUoYR1eqhp_mhVr7_Sv7ZL5RxtHb9XoYPoEgOLTxZmQSA7YBVHfpjHVStiNsgLNHPFW-JLcYZO2gUPWmboFGcJGeUy0j-KXjSKrBQslotcgZYDakkNIWE6jhcIuMHoxfkTUBQkgbDStty87i5LkcNY-Ujm_dd_tSfXlkC81QHZSda-b5v5E9sqwBj7Xm0hAgACpVBHrFB0WDfor4oz337NQoRQ85oVTCfMTIZd1Ikuw2KPDRQgHfwrmZ-MWnQkER-EfOLYbzsgz0r1iNJKFLmZC63FDhkMALuihIHuRHMDRZxWl-HRe5qbXnkjad-eENkLLI20FApSwsIaX68ld87l8-83BDUfPi3-dSfy6hZa14vQcbCXOcTS2nFdfIFNqLB0F5rA_eKp6SaUnDS0_qCmbryGXZLUxycqkNefkPKRYjuULM-MCQ3_GJV3XxIGwOVFoKShwlLQY1WuCmJunNF9y3P0ZDC7jqo2f7gW19_7pu_uDFq6msDDZXSs4AQeWq7eWM-s6WMlTXo7jLDoNSBpRwY0gO-gWXAyKKwel1zEKUuD94NcEcyI4HXtOk_47EeRZXhQ_RgNfu1SDslFbBuf4_KQaO2fgC0YuBGCLxYDKpXoOjYZ85ve_7iT5dddE6WSWMNOrKMBCXPfMBLpGRgGXGCQsD0D4BSGUyETvOqENHFA3Mytn8AjlJocV1YpFaisYY6wvHDIkgm_KfB3jbU7YeydyztHe5bUrm5aSDwE7_c_62tX7tdQFh7fizhAN2QAWFZJ2NmLC29kjwG0gMgE4HyPFa3opmgrTrQR33JFFHSGQUOrVsdxwYJIsMbVMu6-RDmIRLuRLfPVcmkIN5BdirgkCsCg23n7jsT93z5FkToVO3TPGvSnyU4MEqWc9ImhygzDy-DbpbJWt98ebKVvJdPGklXjQ4LqB_6WAaxzFaiPLyqw1nQzEm6r7r9FvTIKjlna_ZnEHjoqdDrmWCXC4f6B4-G8fCu4-d_9OM337wFPNzfyr-6Ln__3WXJsPY8WhaYEWqEZBSmYvExHSEu0mbwuSkTUclSsM5r-VSA9UKARLo7j4PMkkneYmoHBoCbuNDwVWUMgaVMkmdryi4qjRMUeox8TTDkGzYthx3-D8sD_lQ'
) {
  console.log('success')
}
const day = hash.split('-')[0]
let todaysRecords
try {
  const baseURLScores = hash.split('-')[1]
  const scores = Buffer.from(baseURLScores, 'base64').toString('utf-8')
  todaysRecords = JSON.parse(scores)
} catch (error) {
  console.log(`parsing hash failed`, { hash, error })
}
window.anybody

q5.setup = () => {
  const options = {
    level: 0,
    opensea: true,
    todaysRecords
  }
  if (day && day !== '') {
    options.day = parseInt(day)
  }
  window.anybody = new Anybody(q5, options)
  if (!day) {
    console.log('no day!')
    window.location.hash = window.anybody.day.toString()
  }
}
q5.draw = () => {
  window.anybody.draw()
}
